/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52833_qiaa.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include <physical_layouts.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <input/processors.dtsi>
#include <dt-bindings/led/led.h>
#include "btns.dtsi"
#include "trbl-pinctrl.dtsi"

// layers
#define DEFAULT 0
#define SCRLM 1
#define SCRLH 2
#define DEVICE 3
#define BLTH 4
#define SNIPE 5

/ {
    model = "Trackball";
    compatible = "joric,nrfmicro";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,battery = &vbatt;
        zmk,studio-rpc-uart = &uart0;
        zmk,kscan = &kscan0;
        zmk,physical-layout = &physical_layout0;
        zmk,underglow = &led_strip;
        zmk,backlight = &backlight;
    };

    leds {
        compatible = "gpio-leds";

        led_0 {
            gpios = <&gpio0 9 GPIO_ACTIVE_HIGH>;
        };

        led_1 {
            gpios = <&gpio1 1 GPIO_ACTIVE_HIGH>;
        };

        led_2 {
            gpios = <&gpio0 24 GPIO_ACTIVE_HIGH>;
        };
    };

    vbatt: vbatt {
        compatible = "zmk,battery-voltage-divider";
        io-channels = <&adc 7>;
        output-ohms = <160000>;
        full-ohms = <(160000 + 160000)>;
    };

    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        a-gpios = <&gpio1 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio1 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-direct";
        wakeup-source;
        input-gpios
        = <&btns 1 (GPIO_ACTIVE_LOW)>
        , <&btns 0 (GPIO_ACTIVE_LOW)>
        , <&btns 7 (GPIO_ACTIVE_LOW)>
        , <&btns 6 (GPIO_ACTIVE_LOW)>
        , <&btns 5 (GPIO_ACTIVE_LOW)>
        , <&btns 4 (GPIO_ACTIVE_LOW)>
        , <&btns 3 (GPIO_ACTIVE_LOW)>
        , <&btns 2 (GPIO_ACTIVE_LOW)>
        ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <4>;
        map = <
                      RC(0, 0) RC(0, 1)
                      RC(0, 2) RC(0, 3)
                      RC(0, 4) RC(0, 5)
                      RC(0, 6) RC(0, 7)
              >;
    };

    physical_layout0: physical_layout_0 {
        compatible = "zmk,physical-layout";
        display-name = "Default Layout";

        transform = <&default_transform>;
        kscan = <&kscan0>;

        keys  //                     w    h     x     y     rot    rx    ry
        = <&key_physical_attrs 270 90 90 0 0 0 0>
        , <&key_physical_attrs 270 90 360 0 0 0 0>
        , <&key_physical_attrs 90 270 0 45 0 0 0>
        , <&key_physical_attrs 90 270 630 45 0 0 0>
        , <&key_physical_attrs 90 270 0 315 0 0 0>
        , <&key_physical_attrs 90 270 630 315 0 0 0>
        , <&key_physical_attrs 270 90 90 540 0 0 0>
        , <&key_physical_attrs 270 90 360 540 0 0 0>
        ;
    };

    position_map {
        compatible = "zmk,physical-layout-position-map";
        complete;

        layout1: layout1 {
            physical-layout = <&physical_layout0>;
            positions
            = <0 1>
            , <2 3>
            , <4 5>
            , <6 7>
            ;
        };
    };

    backlight: pwmleds {
        compatible = "pwm-leds";

        pwm_led_0 {
            pwms = <&pwm0 0 PWM_MSEC(10) PWM_POLARITY_NORMAL>;
        };
    };

    trackball_primary_listener: trackball_primary_listener {
        compatible = "zmk,input-listener";
        device = <&trackball_primary>;
        input-processors = <&zip_xy_swap_mapper>;

        default {
            layers = <DEFAULT>;
            process-next;
        };

        scroll {
            layers = <SCRLM SCRLH>;
            input-processors = <&zip_xy_transform (INPUT_TRANSFORM_X_INVERT)>, <&zip_xy_swap_mapper>,
                               <&zip_xy_scaler 1 10>, <&zip_xy_to_scroll_mapper>;
            process-next;
        };

        snipe {
            layers = <SNIPE>;
            input-processors = <&zip_xy_scaler 1 5>;
            process-next;
        };
    };

    trackball_secondary_listener: trackball_secondary_listener {
        compatible = "zmk,input-listener";
        device = <&trackball_secondary>;
        input-processors = <&zip_xy_swap_mapper>;

        default {
            layers = <DEFAULT>;
            process-next;
        };

        scroll {
            layers = <SCRLM SCRLH>;
            input-processors = <&zip_xy_transform (INPUT_TRANSFORM_X_INVERT)>, <&zip_xy_swap_mapper>,
                               <&zip_xy_scaler 1 10>, <&zip_xy_to_scroll_mapper>;
            process-next;
        };

        snipe {
            layers = <SNIPE>;
            input-processors = <&zip_xy_scaler 1 5>;
            process-next;
        };
    };
};

&left_encoder {
    status = "okay";
};

&right_encoder {
    status = "okay";
};

&uart0 {
    compatible = "nordic,nrf-uarte";
    status = "okay";
    current-speed = <115200>;
    pinctrl-0 = <&uart0_default>;
    pinctrl-1 = <&uart0_sleep>;
    pinctrl-names = "default", "sleep";
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&i2c0 {
    compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
};

&spi0 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio0 30 GPIO_ACTIVE_LOW>;

    trackball_primary: trackball@0 {
        status = "okay";
        compatible = "pixart,pmw3610";
        reg = <0>;
        spi-max-frequency = <2000000>;
        irq-gpios = <&gpio0 2 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        cpi = <800>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;

        force-awake;
    };
};

&spi1 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi1_default>;
    pinctrl-1 = <&spi1_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&gpio1 7 GPIO_ACTIVE_LOW>;

    trackball_secondary: trackball@0 {
        status = "okay";
        compatible = "pixart,pmw3610";
        reg = <0>;
        spi-max-frequency = <2000000>;
        irq-gpios = <&gpio1 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
        cpi = <800>;
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;

        force-awake;
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        reg = <0>;
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <16>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};

&pwm0 {
    status = "okay";
    pinctrl-0 = <&pwm0_default>;
    pinctrl-1 = <&pwm0_sleep>;
    pinctrl-names = "default", "sleep";
};

zephyr_udc0: &usbd {
    status = "okay";
};

&flash0 {
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            reg = <0x0 DT_SIZE_K(4)>;
        };

        code_partition: partition@1000 {
            reg = <DT_SIZE_K(4) DT_SIZE_K(428)>;
        };

        storage_partition: partition@6c000 {
            reg = <0x0006c000 0x00008000>;
        };
    };
};
